<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc 
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee 
		http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/data/jpa 
		http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd 
		http://www.springframework.org/schema/aop  
		http://www.springframework.org/schema/aop/spring-aop-2.5.xsd	">

    <bean
        id="nutDao"
        class="org.nutz.dao.impl.NutDao"
        p:dataSource-ref="dataSource"/>

    <bean
        id="hibernateTemplate"
        class="org.springframework.orm.hibernate3.HibernateTemplate"
        p:sessionFactory-ref="sessionFactory"
        p:cacheQueries="true"/>

    <bean
        id="sessionFactory"
        class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
        p:dataSource-ref="dataSource"
        p:mappingLocations="classpath:test/model/hbm/*.hbm.xml">
        <property name="hibernateProperties">
            <bean
                class="org.springframework.beans.factory.config.PropertiesFactoryBean"
                p:location="classpath:hibernate.properties"/>
        </property>
    </bean>

    <bean
        id="sqlSessionFactory"
        class="org.mybatis.spring.SqlSessionFactoryBean"
        p:mapperLocations="classpath*:test/model/mapper/*.xml"
        p:dataSource-ref="dataSource"/>

    <bean
        id="sqlSessionTemplate"
        class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory"/>
    </bean>

    <bean
        id="jdbcTemplate"
        class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean
        id="dataSource"
        class="com.alibaba.druid.pool.DruidDataSource"
        init-method="init"
        destroy-method="close"
        p:url="jdbc:mongo://127.0.0.1:27017/mongo_db_demo"
        p:driverClassName="li.mongo.driver.MongoDriver"
        p:maxActive="100"
        p:initialSize="1"
        p:maxWait="60000"
        p:minIdle="1"
        p:timeBetweenEvictionRunsMillis="3000"
        p:minEvictableIdleTimeMillis="300000"
        p:poolPreparedStatements="true"
        p:maxPoolPreparedStatementPerConnectionSize="20"
        p:testWhileIdle="false"
        p:testOnBorrow="false"
        p:testOnReturn="false">
        <property name="proxyFilters">
            <list>
                <bean
                    class="com.alibaba.druid.filter.logging.Log4jFilter"
                    p:statementCloseAfterLogEnabled="false"
                    p:statementExecutableSqlLogEnable="false"/>
            </list>
        </property>
    </bean>
</beans>